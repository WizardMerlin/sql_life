内置函数说完了，现在来说自定义函数.



user-defined function (UDF)的两个必要条件:
  1. 参数
  2. 返回值

(参数, 返回值的类型不限制)


--> 创建自定义函数

    CREATE FUNCTION function_name
      RETURNS
    {STRING|INTEGER|REAL|DECIMAL}
      routine_dody

---
关于RETURNS的说明:

    1. RETURNS说明返回的类型
    2. 作为函数头/声明的一部分


----
关于routine_body函数体的说明:

    1. 函数体是SQL语句，可以是简单的select或者insert语句
    2. 函数体如果是复合结构则使用BEGIN...END语句;
    3. 复合结构可以包含声明，循环，控制结构;

----
   示例:
	select date_format(now(),'%Y%m%d %H%i%s');

	定义类似上述SQL语句功能的函数:
        create function f1() returns varchar(30)
            return date_format(now(), '%Y%m%d %H%i%s');

	调用的话就可以了:   select f1();

----
   示例2:  计算两个数的平均数
         create function f2(num1 smallint unsigned,num2 smallint unsigned)
             returns float(10,2) unsigned
          return avg(num1,num2);

----
   示例3:  向表中插入一条记录，但是返回的是插入记录的id号
          create table if not exists test(
                id tinyint(3) unsigned primary key auto_increment,
                username varchar(20)
           );
          insert into test(username) values('tom'),('John'),('Jimmy');

          //函数内有语句，那么结束符要改变，不能再是分号了
          delimiter $$
          (现在语句结束符就变成了$$ 例如: select now()$$)----改变提交符号

          create function adduser(username varchar(20))
             returns int unsigned
             begin
                insert test(username) values(username);
                return last_insert_id();
             end$$

	  然后再把结束符改回来 delimiter ;
          调用函数  select adduser('merlin');

---
   删除函数  drop function adduser;
